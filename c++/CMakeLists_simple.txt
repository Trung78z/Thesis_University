cmake_minimum_required(VERSION 3.16)
project(LaneVision)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Find OpenCV
find_package(OpenCV REQUIRED)

# Include directories
include_directories(${OpenCV_INCLUDE_DIRS})
include_directories(${CMAKE_SOURCE_DIR})

# Create library
add_library(lanevision
    include/lanevision/LaneDetector.cpp
)

target_link_libraries(lanevision ${OpenCV_LIBS})

# Create test executable
add_executable(test_performance test_performance.cpp)
target_link_libraries(test_performance lanevision ${OpenCV_LIBS})

# Set compiler optimizations for better performance
if(CMAKE_BUILD_TYPE STREQUAL "Release")
    if(CMAKE_CXX_COMPILER_ID STREQUAL "GNU" OR CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
        target_compile_options(lanevision PRIVATE -O3 -march=native -ffast-math)
        target_compile_options(test_performance PRIVATE -O3 -march=native -ffast-math)
    elseif(CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
        target_compile_options(lanevision PRIVATE /O2 /arch:AVX2 /fp:fast)
        target_compile_options(test_performance PRIVATE /O2 /arch:AVX2 /fp:fast)
    endif()
endif()

# Print configuration info
message(STATUS "OpenCV version: ${OpenCV_VERSION}")
message(STATUS "Build type: ${CMAKE_BUILD_TYPE}")
message(STATUS "C++ compiler: ${CMAKE_CXX_COMPILER_ID}") 